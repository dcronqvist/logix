//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\RichieZ\repos\logix\src\LogiX\Minimal\ActionSequencing\ANTLR\ActionSequence.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LogiX.Minimal.ActionSequencing {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="ActionSequenceParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IActionSequenceVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="ActionSequenceParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] ActionSequenceParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ActionSequenceParser.actionSequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitActionSequence([NotNull] ActionSequenceParser.ActionSequenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ActionSequenceParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAction([NotNull] ActionSequenceParser.ActionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ActionSequenceParser.wait"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWait([NotNull] ActionSequenceParser.WaitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ActionSequenceParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] ActionSequenceParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ActionSequenceParser.end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnd([NotNull] ActionSequenceParser.EndContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ActionSequenceParser.continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinue([NotNull] ActionSequenceParser.ContinueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ActionSequenceParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrint([NotNull] ActionSequenceParser.PrintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ActionSequenceParser.push"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPush([NotNull] ActionSequenceParser.PushContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ActionSequenceParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExp([NotNull] ActionSequenceParser.ExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ActionSequenceParser.literalexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralexp([NotNull] ActionSequenceParser.LiteralexpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ActionSequenceParser.ramexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRamexp([NotNull] ActionSequenceParser.RamexpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ActionSequenceParser.pinexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPinexp([NotNull] ActionSequenceParser.PinexpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ActionSequenceParser.boolexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolexp([NotNull] ActionSequenceParser.BoolexpContext context);
}
} // namespace LogiX.Minimal.ActionSequencing
